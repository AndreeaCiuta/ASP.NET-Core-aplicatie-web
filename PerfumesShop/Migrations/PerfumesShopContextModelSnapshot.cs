// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PerfumesShop.Data;

#nullable disable

namespace PerfumesShop.Migrations
{
    [DbContext(typeof(PerfumesShopContext))]
    partial class PerfumesShopContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("PerfumesShop.Pages.Models.Categorie", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Categ")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Categorie");
                });

            modelBuilder.Entity("PerfumesShop.Pages.Models.Concentratie", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Conctr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Concentratie");
                });

            modelBuilder.Entity("PerfumesShop.Pages.Models.Parfum", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<decimal>("Cantitate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("CategorieID")
                        .HasColumnType("int");

                    b.Property<int?>("ConcentratieID")
                        .HasColumnType("int");

                    b.Property<string>("Denumire")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Pret")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TBaza")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TMijloc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TVarf")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TipID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("CategorieID");

                    b.HasIndex("ConcentratieID");

                    b.HasIndex("TipID");

                    b.ToTable("Parfum");
                });

            modelBuilder.Entity("PerfumesShop.Pages.Models.Tip", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Tip");
                });

            modelBuilder.Entity("PerfumesShop.Pages.Models.Utilizator", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Adresa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nume")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prenume")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefon")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Utilizator");
                });

            modelBuilder.Entity("PerfumesShop.Pages.Models.Vandut", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<int?>("ParfumID")
                        .HasColumnType("int");

                    b.Property<int?>("UtilizatorID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ParfumID");

                    b.HasIndex("UtilizatorID");

                    b.ToTable("Vandut");
                });

            modelBuilder.Entity("PerfumesShop.Pages.Models.Parfum", b =>
                {
                    b.HasOne("PerfumesShop.Pages.Models.Categorie", "Categorie")
                        .WithMany("Parfumuri")
                        .HasForeignKey("CategorieID");

                    b.HasOne("PerfumesShop.Pages.Models.Concentratie", "Concentratie")
                        .WithMany("Parfumuri")
                        .HasForeignKey("ConcentratieID");

                    b.HasOne("PerfumesShop.Pages.Models.Tip", "Tip")
                        .WithMany("Parfumuri")
                        .HasForeignKey("TipID");

                    b.Navigation("Categorie");

                    b.Navigation("Concentratie");

                    b.Navigation("Tip");
                });

            modelBuilder.Entity("PerfumesShop.Pages.Models.Vandut", b =>
                {
                    b.HasOne("PerfumesShop.Pages.Models.Parfum", "Parfum")
                        .WithMany()
                        .HasForeignKey("ParfumID");

                    b.HasOne("PerfumesShop.Pages.Models.Utilizator", "Utilizator")
                        .WithMany("Vandute")
                        .HasForeignKey("UtilizatorID");

                    b.Navigation("Parfum");

                    b.Navigation("Utilizator");
                });

            modelBuilder.Entity("PerfumesShop.Pages.Models.Categorie", b =>
                {
                    b.Navigation("Parfumuri");
                });

            modelBuilder.Entity("PerfumesShop.Pages.Models.Concentratie", b =>
                {
                    b.Navigation("Parfumuri");
                });

            modelBuilder.Entity("PerfumesShop.Pages.Models.Tip", b =>
                {
                    b.Navigation("Parfumuri");
                });

            modelBuilder.Entity("PerfumesShop.Pages.Models.Utilizator", b =>
                {
                    b.Navigation("Vandute");
                });
#pragma warning restore 612, 618
        }
    }
}
